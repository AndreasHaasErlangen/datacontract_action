name: Validate Data Contract

on:
  push:
    paths:
      - 'data/**/*.csv'
      - 'data/**/*.yaml'
  pull_request:
    paths:
      - 'data/**/*.csv'
      - 'data/**/*.yaml'
  workflow_dispatch:

jobs:
  validate:
    name: Run Data Contract Validation
    runs-on: ubuntu-latest

    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: 📥 Install datacontract-cli
        run: pip install --upgrade datacontract-cli

      - name: 🧪 Run data contract tests and collect results
        id: test
        run: |
          mkdir -p reports
          summary=""
          result=0
          for contract in data/*.yaml; do
            name=$(basename "$contract")
            echo "🔍 Testing $contract"
            if datacontract test "$contract" > "reports/${name}.log" 2>&1; then
              summary+="✅ $name: Passed%0A"
            else
              summary+="❌ $name: Failed (see logs)%0A"
              result=1
            fi
          done
          echo "summary=$summary" >> "$GITHUB_OUTPUT"
          exit $result

      - name: 📤 Upload validation logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: datacontract-logs
          path: reports/

      - name: 💬 Comment on Pull Request
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const summary = `${{ steps.test.outputs.summary }}`
            const prNumber = context.payload.pull_request.number;
            const runUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            const body = `🔍 **Data Contract Validation Results**\n\n${summary}\n\n📎 Logs are attached to the [GitHub Actions run](${runUrl})`;
            await github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
